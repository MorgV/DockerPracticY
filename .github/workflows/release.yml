name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  REGISTRY: cr.yandex/crp7c6dnjn6sbflchmsn
  IMAGE_NAME: app

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set version number
        id: version
        run: echo "VERSION=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Docker Login to Yandex
        run: echo ${{ secrets.YA_REGISTRY_TOKEN }} | docker login -u oauth --password-stdin cr.yandex

      - name: Build Docker Image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${{ env.VERSION }} .
          docker tag $REGISTRY/$IMAGE_NAME:${{ env.VERSION }} $REGISTRY/$IMAGE_NAME:${{ env.VERSION }}_latest

      - name: Push Docker Image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ env.VERSION }}
          docker push $REGISTRY/$IMAGE_NAME:${{ env.VERSION }}_latest

      - name: Create Release Branch
        run: |
          git checkout -b releases/${{ env.VERSION }}
          git push origin releases/${{ env.VERSION }}

      - name: Tag Release
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Create GitHub Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${{ env.VERSION }}`,
              body: `Дата: ${new Date().toISOString()}\nВерсия: ${{ env.VERSION }}\nОбраз: cr.yandex/${{ env.REGISTRY }}/app:${{ env.VERSION }}`
            });

      - name: Update Changelog
        run: echo -e "## v${{ env.VERSION }}\n- Release commit\n\n$(cat CHANGELOG.md)" > CHANGELOG.md && git add CHANGELOG.md && git commit -m "update changelog" && git push

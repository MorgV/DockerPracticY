name: Deploy to Prod

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Connect via SSH and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            docker pull cr.yandex/crp7c6dnjn6sbflchmsn/app:${{ github.event.inputs.version }}_latest
            docker stop app || true && docker rm app || true
            docker run -d -p 80:3000 --name app cr.yandex/crp7c6dnjn6sbflchmsn/app:${{ github.event.inputs.version }}_latest

      - name: Comment in GitHub Issue about Prod Deploy
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ github.event.inputs.version }}';
            const issueTitle = `Release ${version}`;
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open"
            });
            const issue = issues.data.find(i => i.title === issueTitle);
            if (issue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `üöÄ –†–µ–ª–∏–∑ –∑–∞–¥–µ–ø–ª–æ–µ–Ω –≤ –ø—Ä–æ–¥\n–î–∞—Ç–∞: ${new Date().toISOString()}\n–ê–≤—Ç–æ—Ä: ${context.actor}\n–í–µ—Ä—Å–∏—è: ${version}\n–û–±—Ä–∞–∑: cr.yandex/${{ secrets.REGISTRY || 'your-registry-id' }}/app:${version}_latest`
              });
            } else {
              core.warning("Issue not found for this release version");
            }
